apiVersion: v1
kind: Service
metadata:
  name: explorer
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app: explorer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    velocity.tech.v1/dependsOn: bucket, queue, psql, dynamo, seeding # Velocity dependencies declaration
    velocity.tech.v1/id: explorer # Velocity service identifier
    velocity.tech.v1/exposures-http-isPublic: "true" # Velocity public URI exposure of port name "http"
    velocity.tech.v1/exposures-http-publicScheme: "https" # Velocity public URI exposure scheme of port name "http"
  name: explorer
  labels:
    app: explorer
spec:
  selector:
    matchLabels:
      app: explorer
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: explorer
    spec:
      containers:
        - name: explorer
          image: gcr.io/velocity-playground/aws-explorer
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          envFrom:
            - secretRef:
                name: db-credentials
                optional: false
          env:
            - name: AWS_REGION
              value: eu-central-1
            - name: BUCKET_NAME
              value: "{velocity.v1.generate:cloudResourcePrefix(seed=my-bucket)}-{velocity.v1.envName}-my-bucket"
            - name: DB_HOST
              value: "{velocity.v1:psql.exposures(port=tcp).host}"
            - name: DB_PORT
              value: "{velocity.v1:psql.exposures(port=tcp).port}"
            - name: QUEUE_NAME
              value: "{velocity.v1.generate:cloudResourcePrefix(seed=my-queue)}-{velocity.v1.envName}-my-queue"
            - name: DYNAMODB_TABLE_NAME
              value: "{velocity.v1.generate:cloudResourcePrefix(seed=my-table)}-{velocity.v1.envName}-my-table"
---