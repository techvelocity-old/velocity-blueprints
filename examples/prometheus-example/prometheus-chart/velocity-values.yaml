prometheus:
  serviceAccounts:
    alertmanager:
      create: true
      name:
      annotations: 
        velocity.tech.v1/associateTo: velocity-prometheus-alertmanager
    nodeExporter:
      create: true
      name:
      annotations:
        velocity.tech.v1/associateTo: velocity-prometheus-node-exporter
    pushgateway:
      create: true
      name:
      annotations:
        velocity.tech.v1/associateTo: velocity-prometheus-pushgateway
    server:
      create: true
      name:
      annotations:
        velocity.tech.v1/associateTo: velocity-prometheus-server
      ingress:
        enabled: true
        hosts:
          - "prometheus-{velocity.v1.domainSuffix}"
  alertmanager:
    fullnameOverride: "alertmanager-{velocity.v1.envName}"
    deploymentAnnotations:
      velocity.tech.v1/id: alertmanager
  kube-state-metrics:
    fullnameOverride: "kube-state-metrics-{velocity.v1.envName}"
    serviceAccount:
      annotations: 
        velocity.tech.v1/associateTo: velocity-kube-state-metrics
    annotations:
      velocity.tech.v1/id: kube-state-metrics
  nodeExporter:
    annotations:
      velocity.tech.v1/id: nodeExporter
  server:
    fullnameOverride: "prometheus-server-{velocity.v1.envName}"
    deploymentAnnotations: 
      velocity.tech.v1/id: prometheus-server
  pushgateway:
    fullnameOverride: "pushgateway-{velocity.v1.envName}"
    deploymentAnnotations:
      velocity.tech.v1/id: pushgateway
grafana:
  rbac:
    namespaced: true
  serviceAccount:
    annotations: 
      velocity.tech.v1/associateTo: velocity-grafana
  testFramework:
    enabled: false
  ingress:
    enabled: true
    hosts:
      - grafana-{velocity.v1.domainSuffix}
  adminPassword: admin
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: "http://prometheus-server-{velocity.v1.envName}"
          access: proxy
          isDefault: true
